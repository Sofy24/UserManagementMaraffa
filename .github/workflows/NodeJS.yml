# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  workflow_call:
  push:
    branches: [ "develop", "feature/**" ]
  pull_request:
    branches: [ "main", "develop" ]

  workflow_dispatch:

defaults:
  run:
    shell: bash

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
        fail-fast: false
        matrix:
          # os: [ windows, macos, ubuntu ]
          node-version: [16.x, 18.x]
    concurrency:
      # group: ${{ github.workflow }}-${{ github.ref }}-build-${{ matrix.os }}-${{ matrix.node-version }}
      group: ${{ github.workflow }}-${{ github.ref }}-build-${{ matrix.node-version }}
      cancel-in-progress: true
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
    - name: Run install
      uses: borales/actions-yarn@v4
      with:
        cmd: install # will run `yarn install` command

    # - run: yarn build
  
  test:
    runs-on: ubuntu-latest
    strategy:
        fail-fast: false
        matrix:
          # os: [ windows, macos, ubuntu ]
          node-version: [18.x]
    concurrency:
      # group: ${{ github.workflow }}-${{ github.ref }}-test-${{ matrix.os }}-${{ matrix.node-version }}
      group: ${{ github.workflow }}-${{ github.ref }}-test-${{ matrix.node-version }}
      cancel-in-progress: true
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
      # yarn needs a cache to save node_modules to run jest tests
    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Run jest tests 
      uses: borales/actions-yarn@v4
      with:
        cmd: test 

  # success:
  #   runs-on: ubuntu-22.04
  #   needs:
  #     - build
  #   if: >-
  #     always() && (
  #       contains(join(needs.*.result, ','), 'failure')
  #       || !contains(join(needs.*.result, ','), 'cancelled')
  #     )
  #   steps:
  #     - name: Verify that there were no failures
  #       run: ${{ !contains(join(needs.*.result, ','), 'failure') }}
